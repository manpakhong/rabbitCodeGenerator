package hk.ebsl.mfms.web.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import hk.ebsl.mfms.dto.AlarmConsole;
import hk.ebsl.mfms.manager.AlarmConsoleManager;
import hk.ebsl.mfms.manager.UserAccountManager;
import hk.ebsl.mfms.model.AlarmConsoleJsonObject;
import hk.ebsl.mfms.web.controller.AdministrationController.ModelMappingValue;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;


@Controller
public class AlarmConsoleController {

	public final static Logger logger = Logger
			.getLogger(AlarmConsoleController.class);

	@Autowired
	private AlarmConsoleManager alarmConsoleManager;
	
<<<<<<< HEAD
	@RequestMapping(value = "/GetAllAlarmConsole.do", produces = "application/json")
=======
	@RequestMapping(value = "/AlarmConsole.do")
	public String showAlarmConsole(HttpServletRequest request, HttpServletResponse response, ModelMap model) throws IOException {

		return "alarmconsole/alarm_console";
	}
	
	
	
	@RequestMapping(value = "/GetAllAlarmConsole.do")
>>>>>>> ca28bb2bcd9fd29478dedd3bc334dff26e8a21a7
	public @ResponseBody String showAdministrationManagementMenu(HttpServletRequest request,
			HttpServletResponse response, ModelMap model) {

		
		List<AlarmConsole> alarmList = alarmConsoleManager.getAllAlarm();
		List<AlarmConsoleJsonObject> jsonList = new ArrayList<AlarmConsoleJsonObject>();
	
		int counter = 1;
		AlarmConsoleJsonObject obj = null;
		List<AlarmConsole> objDetail = new ArrayList<AlarmConsole>();
		
		for(AlarmConsole tmp : alarmList){
			
			if(tmp.getSortNum() > 0){
				
				if(obj != null){
					objDetail.add(tmp);
					obj.setDetails(objDetail);
				}
			}else{
			
				if(obj != null)
					jsonList.add(obj);
				
				objDetail = new ArrayList<AlarmConsole>();
				obj = new AlarmConsoleJsonObject();
				obj.setAlertStatus(tmp.getColor());
				obj.setID(counter++);
				obj.setJECCaseNo("");
				obj.setSummary(tmp);	
			}
		}
		
		String jsonString = listToJsonString(jsonList);
		System.out.println(jsonString);
		
		return jsonString;
	}
	
	
	private <T> String listToJsonString(List<T> json) {
		ObjectMapper mapper = new ObjectMapper();

		String rtn = "";

		try {
			rtn = mapper.writeValueAsString(json);
		} catch (JsonGenerationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JsonMappingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return rtn;
	}


	public AlarmConsoleManager getAlarmConsoleManager() {
		return alarmConsoleManager;
	}


	public void setAlarmConsoleManager(AlarmConsoleManager alarmConsoleManager) {
		this.alarmConsoleManager = alarmConsoleManager;
	}
	
	
	
}
