
package hk.ebsl.mfms.dao;

import hk.ebsl.mfms.dto.DefectScheduleHistory;

import java.sql.Timestamp;
import java.util.List;

import org.apache.log4j.Logger;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;

public class DefectScheduleHistoryDao extends BaseDao {

	public static final Logger logger = Logger.getLogger(DefectScheduleHistoryDao.class);

	public int saveDefectScheduleHistory(DefectScheduleHistory scheduleHistory) {

		Session currentSession = getSession();

		currentSession.saveOrUpdate(scheduleHistory);

		return scheduleHistory.getKey();
		
	}

	@SuppressWarnings("unchecked")
	public List<DefectScheduleHistory> getSiteScheduleHistory(Integer siteKey, Timestamp lastFinishDateTime) {

		Criteria criteria = getDefaultCriteria();

		criteria.add(Restrictions.gt("siteKey", siteKey));

		criteria.add(Restrictions.gt("finishDateTime", lastFinishDateTime));

		return criteria.list();
	}
	
	@SuppressWarnings("unchecked")
	public List<DefectScheduleHistory> getDefectScheduleHistoryByDefectScheduleKey(Integer key) {

		Criteria criteria = getDefaultCriteria();

		criteria.add(Restrictions.eq("defectScheduleKey", key));

		return criteria.list();
	}
	
<<<<<<< HEAD

=======
>>>>>>> 794217119d7501eae4f8732e0695d9b1b862082d
	public DefectScheduleHistory getByKey(Integer key){
		
		Criteria criteria = getDefaultCriteria();
		criteria.add(Restrictions.eq("key", key));
		
		List<DefectScheduleHistory> list = criteria.list();
		
		if(list != null && !list.isEmpty()){
			return list.get(0);
		}else{
			return null;
		}
		
	}
	private Criteria getDefaultCriteria() {

		Session currentSession = getSession();

		Criteria criteria = currentSession.createCriteria(DefectScheduleHistory.class);

		return criteria;
	}

}
